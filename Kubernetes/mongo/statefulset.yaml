apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: ecommerce
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: mongodb
          image: mongo:6.0
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: MONGO_INITDB_ROOT_PASSWORD
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db

          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  mongosh "mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@localhost:27017/admin" \
                    --quiet --eval "db.adminCommand('ping')"
            initialDelaySeconds: 10  
            periodSeconds: 10        
            timeoutSeconds: 10
            failureThreshold: 3

          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  mongosh "mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@localhost:27017/admin" \
                    --quiet --eval "db.adminCommand('ping')"
            initialDelaySeconds: 30  
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
            
  volumeClaimTemplates:
    - metadata:
        name: mongodb-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi