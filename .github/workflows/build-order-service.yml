name: CI/CD - Order Service

on:
  push:
    paths:
      - "OrderService/**"
      - ".github/workflows/build-order-service.yml"
  pull_request:
    paths:
      - "OrderService/**"
      - ".github/workflows/build-order-service.yml"

jobs:
  build:
    name: Build, Test and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.3.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.1.0
        with:
          useConfigFile: true
          configFilePath: OrderService/GitVersion.yml

      - name: Restore dependencies
        run: dotnet restore OrderService/OrderService.sln

      - name: Build
        run: dotnet build OrderService/OrderService.sln --no-restore --configuration Release

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Unit Tests
        run: dotnet test OrderService/OrderService.Application.Unit.Tests/OrderService.Application.Unit.Tests.csproj --no-build --configuration Release --verbosity normal

      - name: Run Integration Tests
        run: dotnet test OrderService/OrderService.Presentation.Integration.Tests/OrderService.Presentation.Integration.Tests.csproj --no-build --configuration Release --verbosity normal

      - name: Build & Push Docker image
        run: |
          IMAGE_NAME=maiconghidolin/ecommerce-order-service
          IMAGE_TAG=${{ steps.gitversion.outputs.semVer }}
          docker build -t $IMAGE_NAME:$IMAGE_TAG -f OrderService/OrderService.Presentation/Dockerfile OrderService
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest